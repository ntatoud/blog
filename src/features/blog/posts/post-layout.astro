---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

import { getPageTitle } from '@/lib/get-page-title';
import { cn } from '@/lib/utils';
import { FormattedDate } from '@/components/formatted-date';
import RootLayout from '@/layout/root-layout.astro';

type Props = CollectionEntry<'blogPosts'>['data'];

const { title, description, pubDate, updatedDate, heroImage } = Astro.props;
---

<RootLayout title={getPageTitle(title)} description={description}>
  <article class="blog-post pb-24 md:pb-32">
    <div class="relative max-w-7xl overflow-hidden">
      {
        heroImage && (
          <>
            <div class="from-background via-background/80 pointer-events-none absolute inset-0 bg-gradient-to-t" />
            <div class="bg-background/20 pointer-events-none absolute inset-0" />
            <Image
              src={heroImage}
              alt={title}
              class="h-full w-full rounded-lg object-cover"
              widths={[640, 1280, 1920, 2560]}
              sizes="(max-width: 640px) 640px, (max-width: 1280px) 1280px, (max-width: 1920px) 1920px, 2560px"
              quality={100}
              format="webp"
            />
          </>
        )
      }
    </div>

    <div
      class={cn(
        'relative mb-12 flex w-full flex-col items-center gap-4 px-4 text-center xl:px-0',
        heroImage ? '-mt-32' : 'mt-24'
      )}
    >
      <h1
        class="font-head text-primary text-4xl font-bold tracking-tight lg:text-5xl"
      >
        {title}
      </h1>
      <div>
        <FormattedDate
          date={pubDate}
          className="text-muted-foreground text-lg"
        />
        {
          updatedDate && (
            <div>
              Last updated on <FormattedDate date={updatedDate} />
            </div>
          )
        }
      </div>
    </div>

    <div class="blog-post-content mx-auto max-w-[52rem]">
      <slot />
    </div>
  </article>
</RootLayout>
